{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regex","NewMovie","state","titleValue","descriptionValue","imgUrlValue","imdbUrlValue","imdbIdValue","isValidImgUrl","isValidImdbUrl","checkValidImgUrl","setState","test","checkValidIMDB","createNewMoviePost","newMovie","props","addMovie","this","onSubmit","event","preventDefault","htmlFor","onChange","target","value","id","placeholder","required","classNames","input__invalid","disabled","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c86cb5eb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/;\n\nexport class NewMovie extends Component {\n  state = {\n    titleValue: '',\n    descriptionValue: '',\n    imgUrlValue: '',\n    imdbUrlValue: '',\n    imdbIdValue: '',\n    isValidImgUrl: true,\n    isValidImdbUrl: true,\n  };\n\n  checkValidImgUrl = () => {\n    this.setState(state => ({\n      isValidImgUrl: regex.test(state.imgUrlValue),\n    }));\n  }\n\n  checkValidIMDB = () => {\n    this.setState(state => ({\n      isValidImdbUrl: regex.test(state.imdbUrlValue),\n    }));\n  }\n\n  createNewMoviePost = () => {\n    const {\n      titleValue,\n      descriptionValue,\n      imgUrlValue,\n      imdbUrlValue,\n      imdbIdValue,\n    } = this.state;\n    const newMovie = {\n      title: titleValue,\n      description: descriptionValue,\n      imgUrl: imgUrlValue,\n      imdbUrl: imdbUrlValue,\n      imdbId: imdbIdValue,\n    };\n\n    this.props.addMovie(newMovie);\n    this.setState({\n      titleValue: '',\n      descriptionValue: '',\n      imgUrlValue: '',\n      imdbUrlValue: '',\n      imdbIdValue: '',\n      isValidImgUrl: false,\n      isValidImdbUrl: false,\n    });\n  }\n\n  render() {\n    const {\n      titleValue,\n      descriptionValue,\n      imgUrlValue,\n      imdbUrlValue,\n      imdbIdValue,\n      isValidImgUrl,\n      isValidImdbUrl,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.createNewMoviePost();\n        }}\n        className=\"form\"\n      >\n\n        <label className=\"label\" htmlFor=\"title\">Title</label>\n        <input\n          onChange={(event) => {\n            this.setState({\n              titleValue: event.target.value,\n            });\n          }}\n          value={titleValue}\n          className=\"input\"\n          id=\"title\"\n          placeholder=\"Title\"\n          required\n        />\n\n        <label className=\"label\" htmlFor=\"description\">Description</label>\n        <input\n          onChange={(event) => {\n            this.setState({\n              descriptionValue: event.target.value,\n            });\n          }}\n          value={descriptionValue}\n          className=\"input\"\n          placeholder=\"Description\"\n          id=\"description\"\n        />\n\n        <label className=\"label\" htmlFor=\"img-url\">Image URL</label>\n        <input\n          onChange={(event) => {\n            this.setState({\n              imgUrlValue: event.target.value,\n            });\n            this.checkValidImgUrl();\n          }}\n          value={imgUrlValue}\n          className={\n            classNames('input', { input__invalid: !isValidImgUrl })\n          }\n          id=\"img-url\"\n          placeholder=\"Image URL\"\n          required\n        />\n        {\n          !isValidImgUrl\n          && <span className=\"tag is-warning\">Input valid image url</span>\n        }\n\n        <label className=\"label\" htmlFor=\"imdb-url\">IMDB URL</label>\n        <input\n          onChange={(event) => {\n            this.setState({\n              imdbUrlValue: event.target.value,\n            });\n            this.checkValidIMDB();\n          }}\n          value={imdbUrlValue}\n          className={\n            classNames('input', { input__invalid: !isValidImdbUrl })\n          }\n          id=\"imdb-url\"\n          placeholder=\"IMDB URL\"\n          required\n        />\n        {\n          !isValidImdbUrl\n          && <span className=\"tag is-warning\">Input valid IMDB url</span>\n        }\n\n        <label className=\"label\" htmlFor=\"imdb-id\">IMDB id</label>\n        <input\n          onChange={(event) => {\n            this.setState({\n              imdbIdValue: event.target.value,\n            });\n          }}\n          value={imdbIdValue}\n          className=\"input\"\n          id=\"imdb-id\"\n          placeholder=\"IMDB Id\"\n          required\n        />\n\n        <button\n          disabled={!isValidImgUrl || !isValidImdbUrl}\n          type=\"submit\"\n          className=\"button is-link\"\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}